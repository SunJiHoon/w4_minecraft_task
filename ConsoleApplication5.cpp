#include "pch.h"
#include <iostream>
#include <CoalaMOD.h>
#pragma comment(lib, "CoalaMOD.lib")

int main()
{
	int px, py, pz;
	getPlayerLocation(&px, &py, &pz);
	WoolID zero_color = createWool(COLOR_WHITE);
	WoolID two = createWool(COLOR_ORANGE);
	WoolID three = createWool(COLOR_GREEN);
	WoolID four = createWool(COLOR_RED);
	WoolID five = createWool(COLOR_YELLOW);

	double dir = getPlayerDirection();

	double dir_rad = dir * 3.14159265358979323846 / 180;

	int dx = -10 * sin(dir_rad);
	int dz = 10 * cos(dir_rad);

	
	locateBlock(zero_color, px + dx-1, py , pz + dz);
	locateBlock(zero_color, px + dx-2, py, pz + dz);
	locateBlock(zero_color, px + dx+1, py, pz + dz);
	locateBlock(zero_color, px + dx+2, py, pz + dz);
	locateBlock(zero_color, px + dx - 1, py, pz + dz + 1);
	locateBlock(zero_color, px + dx - 2, py, pz + dz + 1);
	locateBlock(zero_color, px + dx + 1, py, pz + dz + 1);
	locateBlock(zero_color, px + dx + 2, py, pz + dz + 1);
	locateBlock(zero_color, px + dx + -1, py, pz + dz + 2);
	locateBlock(zero_color, px + dx + -2, py, pz + dz + 2);
	locateBlock(zero_color, px + dx + 0, py, pz + dz +  2);
	locateBlock(zero_color, px + dx + 1, py, pz + dz +  2);
	locateBlock(zero_color, px + dx + 2, py, pz + dz +  2);
	locateBlock(zero_color, px + dx + -1, py, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py, pz + dz + 3);
	locateBlock(zero_color, px + dx + 0, py, pz + dz +  3);
	locateBlock(zero_color, px + dx + 1, py, pz + dz +  3);
	locateBlock(zero_color, px + dx + 2, py, pz + dz +  3);
	locateBlock(zero_color, px + dx + -1, py +1, pz + dz + 2);
	locateBlock(zero_color, px + dx + -2, py +1, pz + dz + 2);
	locateBlock(zero_color, px + dx + 0, py  +1, pz + dz + 2);
	locateBlock(zero_color, px + dx + 1, py  +1, pz + dz + 2);
	locateBlock(zero_color, px + dx + 2, py  +1, pz + dz + 2);
	locateBlock(zero_color, px + dx + -1, py +1, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py +1, pz + dz + 3);
	locateBlock(zero_color, px + dx + 0, py  +1,  pz + dz + 3);
	locateBlock(zero_color, px + dx + 1, py  +1, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py  +1, pz + dz + 3);
	locateBlock(zero_color, px + dx + -1, py + 2, pz + dz + 2);
	locateBlock(zero_color, px + dx + -2, py + 2, pz + dz + 2);
	locateBlock(zero_color, px + dx + 0, py +  2, pz + dz + 2);
	locateBlock(zero_color, px + dx + 1, py +  2, pz + dz + 2);
	locateBlock(zero_color, px + dx + 2, py +  2, pz + dz + 2);
	locateBlock(zero_color, px + dx + -1, py + 2, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py + 2, pz + dz + 3);
	locateBlock(zero_color, px + dx + 0, py +  2, pz + dz + 3);
	locateBlock(zero_color, px + dx + 1, py +  2, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py +  2, pz + dz + 3);
	locateBlock(zero_color, px + dx-2, py + 3, pz + dz);
	locateBlock(zero_color, px + dx+2, py + 3, pz + dz);
	locateBlock(zero_color, px + dx - 2, py + 3, pz + dz+1);
	locateBlock(zero_color, px + dx + 2, py + 3, pz + dz+1);
	locateBlock(zero_color, px + dx + -1, py + 3, pz + dz + 2);
	locateBlock(zero_color, px + dx + -2, py + 3, pz + dz + 2);
	locateBlock(zero_color, px + dx + 0, py  + 3, pz + dz + 2);
	locateBlock(zero_color, px + dx + 1, py  + 3, pz + dz + 2);
	locateBlock(zero_color, px + dx + 2, py  + 3, pz + dz + 2);
	locateBlock(zero_color, px + dx + -1, py + 3, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py + 3, pz + dz + 3);
	locateBlock(zero_color, px + dx + 0, py  + 3, pz + dz + 3);
	locateBlock(zero_color, px + dx + 1, py  + 3, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py  + 3, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py+4, pz + dz + 2);
	locateBlock(zero_color, px + dx + 0, py +4, pz + dz + 2);
	locateBlock(zero_color, px + dx + 2, py +4, pz + dz + 2);
	locateBlock(zero_color, px + dx + -1, py+4, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py+4, pz + dz + 3);
	locateBlock(zero_color, px + dx + 0, py +4, pz + dz + 3);
	locateBlock(zero_color, px + dx + 1, py +4, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py +4, pz + dz + 3);
	locateBlock(zero_color, px + dx + -1, py+5, pz + dz + 2);
	locateBlock(zero_color, px + dx + -2, py+5, pz + dz + 2);
	locateBlock(zero_color, px + dx + 0, py +5, pz + dz + 2);
	locateBlock(zero_color, px + dx + 1, py +5, pz + dz + 2);
	locateBlock(zero_color, px + dx + 2, py +5, pz + dz + 2);
	locateBlock(zero_color, px + dx + -1, py+5, pz + dz + 3);
	locateBlock(zero_color, px + dx + -2, py+5, pz + dz + 3);
	locateBlock(zero_color, px + dx + 0, py +5, pz + dz + 3);
	locateBlock(zero_color, px + dx + 1, py +5, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py +5, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py + 6, pz + dz + 3);
	locateBlock(zero_color, px + dx + 2, py + 6, pz + dz + 2);
	locateBlock(zero_color, px + dx -2, py + 6, pz + dz + 3);
	locateBlock(zero_color, px + dx -2, py + 6, pz + dz + 2);

	px = px - 6;

	locateBlock(two, px + dx - 1, py, pz + dz);
	locateBlock(two, px + dx - 2, py, pz + dz);
	locateBlock(two, px + dx + 1, py, pz + dz);
	locateBlock(two, px + dx + 2, py, pz + dz);
	locateBlock(two, px + dx - 1, py, pz + dz + 1);
	locateBlock(two, px + dx - 2, py, pz + dz + 1);
	locateBlock(two, px + dx + 1, py, pz + dz + 1);
	locateBlock(two, px + dx + 2, py, pz + dz + 1);
	locateBlock(two, px + dx + -1, py, pz + dz + 2);
	locateBlock(two, px + dx + -2, py, pz + dz + 2);
	locateBlock(two, px + dx + 0, py, pz + dz + 2);
	locateBlock(two, px + dx + 1, py, pz + dz + 2);
	locateBlock(two, px + dx + 2, py, pz + dz + 2);
	locateBlock(two, px + dx + -1, py, pz + dz + 3);
	locateBlock(two, px + dx + -2, py, pz + dz + 3);
	locateBlock(two, px + dx + 0, py, pz + dz + 3);
	locateBlock(two, px + dx + 1, py, pz + dz + 3);
	locateBlock(two, px + dx + 2, py, pz + dz + 3);
	locateBlock(two, px + dx + -1, py + 1, pz + dz + 2);
	locateBlock(two, px + dx + -2, py + 1, pz + dz + 2);
	locateBlock(two, px + dx + 0, py + 1, pz + dz + 2);
	locateBlock(two, px + dx + 1, py + 1, pz + dz + 2);
	locateBlock(two, px + dx + 2, py + 1, pz + dz + 2);
	locateBlock(two, px + dx + -1, py + 1, pz + dz + 3);
	locateBlock(two, px + dx + -2, py + 1, pz + dz + 3);
	locateBlock(two, px + dx + 0, py + 1, pz + dz + 3);
	locateBlock(two, px + dx + 1, py + 1, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 1, pz + dz + 3);
	locateBlock(two, px + dx + -1, py + 2, pz + dz + 2);
	locateBlock(two, px + dx + -2, py + 2, pz + dz + 2);
	locateBlock(two, px + dx + 0, py + 2, pz + dz + 2);
	locateBlock(two, px + dx + 1, py + 2, pz + dz + 2);
	locateBlock(two, px + dx + 2, py + 2, pz + dz + 2);
	locateBlock(two, px + dx + -1, py + 2, pz + dz + 3);
	locateBlock(two, px + dx + -2, py + 2, pz + dz + 3);
	locateBlock(two, px + dx + 0, py + 2, pz + dz + 3);
	locateBlock(two, px + dx + 1, py + 2, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 2, pz + dz + 3);
	locateBlock(two, px + dx - 2, py + 3, pz + dz);
	locateBlock(two, px + dx + 2, py + 3, pz + dz);
	locateBlock(two, px + dx - 2, py + 3, pz + dz + 1);
	locateBlock(two, px + dx + 2, py + 3, pz + dz + 1);
	locateBlock(two, px + dx + -1, py + 3, pz + dz + 2);
	locateBlock(two, px + dx + -2, py + 3, pz + dz + 2);
	locateBlock(two, px + dx + 0, py + 3, pz + dz + 2);
	locateBlock(two, px + dx + 1, py + 3, pz + dz + 2);
	locateBlock(two, px + dx + 2, py + 3, pz + dz + 2);
	locateBlock(two, px + dx + -1, py + 3, pz + dz + 3);
	locateBlock(two, px + dx + -2, py + 3, pz + dz + 3);
	locateBlock(two, px + dx + 0, py + 3, pz + dz + 3);
	locateBlock(two, px + dx + 1, py + 3, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 3, pz + dz + 3);
	locateBlock(two, px + dx + -2, py + 4, pz + dz + 2);
	locateBlock(two, px + dx + 0, py + 4, pz + dz + 2);
	locateBlock(two, px + dx + 2, py + 4, pz + dz + 2);
	locateBlock(two, px + dx + -1, py + 4, pz + dz + 3);
	locateBlock(two, px + dx + -2, py + 4, pz + dz + 3);
	locateBlock(two, px + dx + 0, py + 4, pz + dz + 3);
	locateBlock(two, px + dx + 1, py + 4, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 4, pz + dz + 3);
	locateBlock(two, px + dx + -1, py + 5, pz + dz + 2);
	locateBlock(two, px + dx + -2, py + 5, pz + dz + 2);
	locateBlock(two, px + dx + 0, py + 5, pz + dz + 2);
	locateBlock(two, px + dx + 1, py + 5, pz + dz + 2);
	locateBlock(two, px + dx + 2, py + 5, pz + dz + 2);
	locateBlock(two, px + dx + -1, py + 5, pz + dz + 3);
	locateBlock(two, px + dx + -2, py + 5, pz + dz + 3);
	locateBlock(two, px + dx + 0, py + 5, pz + dz + 3);
	locateBlock(two, px + dx + 1, py + 5, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 5, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 6, pz + dz + 3);
	locateBlock(two, px + dx + 2, py + 6, pz + dz + 2);
	locateBlock(two, px + dx - 2, py + 6, pz + dz + 3);
	locateBlock(two, px + dx - 2, py + 6, pz + dz + 2);

	px = px - 6;

	locateBlock(three, px + dx - 1, py, pz + dz);
	locateBlock(three, px + dx - 2, py, pz + dz);
	locateBlock(three, px + dx + 1, py, pz + dz);
	locateBlock(three, px + dx + 2, py, pz + dz);
	locateBlock(three, px + dx - 1, py, pz + dz + 1);
	locateBlock(three, px + dx - 2, py, pz + dz + 1);
	locateBlock(three, px + dx + 1, py, pz + dz + 1);
	locateBlock(three, px + dx + 2, py, pz + dz + 1);
	locateBlock(three, px + dx + -1, py, pz + dz + 2);
	locateBlock(three, px + dx + -2, py, pz + dz + 2);
	locateBlock(three, px + dx + 0, py, pz + dz + 2);
	locateBlock(three, px + dx + 1, py, pz + dz + 2);
	locateBlock(three, px + dx + 2, py, pz + dz + 2);
	locateBlock(three, px + dx + -1, py, pz + dz + 3);
	locateBlock(three, px + dx + -2, py, pz + dz + 3);
	locateBlock(three, px + dx + 0, py, pz + dz + 3);
	locateBlock(three, px + dx + 1, py, pz + dz + 3);
	locateBlock(three, px + dx + 2, py, pz + dz + 3);
	locateBlock(three, px + dx + -1, py + 1, pz + dz + 2);
	locateBlock(three, px + dx + -2, py + 1, pz + dz + 2);
	locateBlock(three, px + dx + 0, py + 1, pz + dz + 2);
	locateBlock(three, px + dx + 1, py + 1, pz + dz + 2);
	locateBlock(three, px + dx + 2, py + 1, pz + dz + 2);
	locateBlock(three, px + dx + -1, py + 1, pz + dz + 3);
	locateBlock(three, px + dx + -2, py + 1, pz + dz + 3);
	locateBlock(three, px + dx + 0, py + 1, pz + dz + 3);
	locateBlock(three, px + dx + 1, py + 1, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 1, pz + dz + 3);
	locateBlock(three, px + dx + -1, py + 2, pz + dz + 2);
	locateBlock(three, px + dx + -2, py + 2, pz + dz + 2);
	locateBlock(three, px + dx + 0, py + 2, pz + dz + 2);
	locateBlock(three, px + dx + 1, py + 2, pz + dz + 2);
	locateBlock(three, px + dx + 2, py + 2, pz + dz + 2);
	locateBlock(three, px + dx + -1, py + 2, pz + dz + 3);
	locateBlock(three, px + dx + -2, py + 2, pz + dz + 3);
	locateBlock(three, px + dx + 0, py + 2, pz + dz + 3);
	locateBlock(three, px + dx + 1, py + 2, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 2, pz + dz + 3);
	locateBlock(three, px + dx - 2, py + 3, pz + dz);
	locateBlock(three, px + dx + 2, py + 3, pz + dz);
	locateBlock(three, px + dx - 2, py + 3, pz + dz + 1);
	locateBlock(three, px + dx + 2, py + 3, pz + dz + 1);
	locateBlock(three, px + dx + -1, py + 3, pz + dz + 2);
	locateBlock(three, px + dx + -2, py + 3, pz + dz + 2);
	locateBlock(three, px + dx + 0, py + 3, pz + dz + 2);
	locateBlock(three, px + dx + 1, py + 3, pz + dz + 2);
	locateBlock(three, px + dx + 2, py + 3, pz + dz + 2);
	locateBlock(three, px + dx + -1, py + 3, pz + dz + 3);
	locateBlock(three, px + dx + -2, py + 3, pz + dz + 3);
	locateBlock(three, px + dx + 0, py + 3, pz + dz + 3);
	locateBlock(three, px + dx + 1, py + 3, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 3, pz + dz + 3);
	locateBlock(three, px + dx + -2, py + 4, pz + dz + 2);
	locateBlock(three, px + dx + 0, py + 4, pz + dz + 2);
	locateBlock(three, px + dx + 2, py + 4, pz + dz + 2);
	locateBlock(three, px + dx + -1, py + 4, pz + dz + 3);
	locateBlock(three, px + dx + -2, py + 4, pz + dz + 3);
	locateBlock(three, px + dx + 0, py + 4, pz + dz + 3);
	locateBlock(three, px + dx + 1, py + 4, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 4, pz + dz + 3);
	locateBlock(three, px + dx + -1, py + 5, pz + dz + 2);
	locateBlock(three, px + dx + -2, py + 5, pz + dz + 2);
	locateBlock(three, px + dx + 0, py + 5, pz + dz + 2);
	locateBlock(three, px + dx + 1, py + 5, pz + dz + 2);
	locateBlock(three, px + dx + 2, py + 5, pz + dz + 2);
	locateBlock(three, px + dx + -1, py + 5, pz + dz + 3);
	locateBlock(three, px + dx + -2, py + 5, pz + dz + 3);
	locateBlock(three, px + dx + 0, py + 5, pz + dz + 3);
	locateBlock(three, px + dx + 1, py + 5, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 5, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 6, pz + dz + 3);
	locateBlock(three, px + dx + 2, py + 6, pz + dz + 2);
	locateBlock(three, px + dx - 2, py + 6, pz + dz + 3);
	locateBlock(three, px + dx - 2, py + 6, pz + dz + 2);

	px = px - 6;

	locateBlock(four, px + dx - 1, py, pz + dz);
	locateBlock(four, px + dx - 2, py, pz + dz);
	locateBlock(four, px + dx + 1, py, pz + dz);
	locateBlock(four, px + dx + 2, py, pz + dz);
	locateBlock(four, px + dx - 1, py, pz + dz + 1);
	locateBlock(four, px + dx - 2, py, pz + dz + 1);
	locateBlock(four, px + dx + 1, py, pz + dz + 1);
	locateBlock(four, px + dx + 2, py, pz + dz + 1);
	locateBlock(four, px + dx + -1, py, pz + dz + 2);
	locateBlock(four, px + dx + -2, py, pz + dz + 2);
	locateBlock(four, px + dx + 0, py, pz + dz + 2);
	locateBlock(four, px + dx + 1, py, pz + dz + 2);
	locateBlock(four, px + dx + 2, py, pz + dz + 2);
	locateBlock(four, px + dx + -1, py, pz + dz + 3);
	locateBlock(four, px + dx + -2, py, pz + dz + 3);
	locateBlock(four, px + dx + 0, py, pz + dz + 3);
	locateBlock(four, px + dx + 1, py, pz + dz + 3);
	locateBlock(four, px + dx + 2, py, pz + dz + 3);
	locateBlock(four, px + dx + -1, py + 1, pz + dz + 2);
	locateBlock(four, px + dx + -2, py + 1, pz + dz + 2);
	locateBlock(four, px + dx + 0, py + 1, pz + dz + 2);
	locateBlock(four, px + dx + 1, py + 1, pz + dz + 2);
	locateBlock(four, px + dx + 2, py + 1, pz + dz + 2);
	locateBlock(four, px + dx + -1, py + 1, pz + dz + 3);
	locateBlock(four, px + dx + -2, py + 1, pz + dz + 3);
	locateBlock(four, px + dx + 0, py + 1, pz + dz + 3);
	locateBlock(four, px + dx + 1, py + 1, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 1, pz + dz + 3);
	locateBlock(four, px + dx + -1, py + 2, pz + dz + 2);
	locateBlock(four, px + dx + -2, py + 2, pz + dz + 2);
	locateBlock(four, px + dx + 0, py + 2, pz + dz + 2);
	locateBlock(four, px + dx + 1, py + 2, pz + dz + 2);
	locateBlock(four, px + dx + 2, py + 2, pz + dz + 2);
	locateBlock(four, px + dx + -1, py + 2, pz + dz + 3);
	locateBlock(four, px + dx + -2, py + 2, pz + dz + 3);
	locateBlock(four, px + dx + 0, py + 2, pz + dz + 3);
	locateBlock(four, px + dx + 1, py + 2, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 2, pz + dz + 3);
	locateBlock(four, px + dx - 2, py + 3, pz + dz);
	locateBlock(four, px + dx + 2, py + 3, pz + dz);
	locateBlock(four, px + dx - 2, py + 3, pz + dz + 1);
	locateBlock(four, px + dx + 2, py + 3, pz + dz + 1);
	locateBlock(four, px + dx + -1, py + 3, pz + dz + 2);
	locateBlock(four, px + dx + -2, py + 3, pz + dz + 2);
	locateBlock(four, px + dx + 0, py + 3, pz + dz + 2);
	locateBlock(four, px + dx + 1, py + 3, pz + dz + 2);
	locateBlock(four, px + dx + 2, py + 3, pz + dz + 2);
	locateBlock(four, px + dx + -1, py + 3, pz + dz + 3);
	locateBlock(four, px + dx + -2, py + 3, pz + dz + 3);
	locateBlock(four, px + dx + 0, py + 3, pz + dz + 3);
	locateBlock(four, px + dx + 1, py + 3, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 3, pz + dz + 3);
	locateBlock(four, px + dx + -2, py + 4, pz + dz + 2);
	locateBlock(four, px + dx + 0, py + 4, pz + dz + 2);
	locateBlock(four, px + dx + 2, py + 4, pz + dz + 2);
	locateBlock(four, px + dx + -1, py + 4, pz + dz + 3);
	locateBlock(four, px + dx + -2, py + 4, pz + dz + 3);
	locateBlock(four, px + dx + 0, py + 4, pz + dz + 3);
	locateBlock(four, px + dx + 1, py + 4, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 4, pz + dz + 3);
	locateBlock(four, px + dx + -1, py + 5, pz + dz + 2);
	locateBlock(four, px + dx + -2, py + 5, pz + dz + 2);
	locateBlock(four, px + dx + 0, py + 5, pz + dz + 2);
	locateBlock(four, px + dx + 1, py + 5, pz + dz + 2);
	locateBlock(four, px + dx + 2, py + 5, pz + dz + 2);
	locateBlock(four, px + dx + -1, py + 5, pz + dz + 3);
	locateBlock(four, px + dx + -2, py + 5, pz + dz + 3);
	locateBlock(four, px + dx + 0, py + 5, pz + dz + 3);
	locateBlock(four, px + dx + 1, py + 5, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 5, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 6, pz + dz + 3);
	locateBlock(four, px + dx + 2, py + 6, pz + dz + 2);
	locateBlock(four, px + dx - 2, py + 6, pz + dz + 3);
	locateBlock(four, px + dx - 2, py + 6, pz + dz + 2);
	

	px = px - 6;

	locateBlock(five, px + dx - 1, py, pz + dz);
	locateBlock(five, px + dx - 2, py, pz + dz);
	locateBlock(five, px + dx + 1, py, pz + dz);
	locateBlock(five, px + dx + 2, py, pz + dz);
	locateBlock(five, px + dx - 1, py, pz + dz + 1);
	locateBlock(five, px + dx - 2, py, pz + dz + 1);
	locateBlock(five, px + dx + 1, py, pz + dz + 1);
	locateBlock(five, px + dx + 2, py, pz + dz + 1);
	locateBlock(five, px + dx + -1, py, pz + dz + 2);
	locateBlock(five, px + dx + -2, py, pz + dz + 2);
	locateBlock(five, px + dx + 0, py, pz + dz + 2);
	locateBlock(five, px + dx + 1, py, pz + dz + 2);
	locateBlock(five, px + dx + 2, py, pz + dz + 2);
	locateBlock(five, px + dx + -1, py, pz + dz + 3);
	locateBlock(five, px + dx + -2, py, pz + dz + 3);
	locateBlock(five, px + dx + 0, py, pz + dz + 3);
	locateBlock(five, px + dx + 1, py, pz + dz + 3);
	locateBlock(five, px + dx + 2, py, pz + dz + 3);
	locateBlock(five, px + dx + -1, py + 1, pz + dz + 2);
	locateBlock(five, px + dx + -2, py + 1, pz + dz + 2);
	locateBlock(five, px + dx + 0, py + 1, pz + dz + 2);
	locateBlock(five, px + dx + 1, py + 1, pz + dz + 2);
	locateBlock(five, px + dx + 2, py + 1, pz + dz + 2);
	locateBlock(five, px + dx + -1, py + 1, pz + dz + 3);
	locateBlock(five, px + dx + -2, py + 1, pz + dz + 3);
	locateBlock(five, px + dx + 0, py + 1, pz + dz + 3);
	locateBlock(five, px + dx + 1, py + 1, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 1, pz + dz + 3);
	locateBlock(five, px + dx + -1, py + 2, pz + dz + 2);
	locateBlock(five, px + dx + -2, py + 2, pz + dz + 2);
	locateBlock(five, px + dx + 0, py + 2, pz + dz + 2);
	locateBlock(five, px + dx + 1, py + 2, pz + dz + 2);
	locateBlock(five, px + dx + 2, py + 2, pz + dz + 2);
	locateBlock(five, px + dx + -1, py + 2, pz + dz + 3);
	locateBlock(five, px + dx + -2, py + 2, pz + dz + 3);
	locateBlock(five, px + dx + 0, py + 2, pz + dz + 3);
	locateBlock(five, px + dx + 1, py + 2, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 2, pz + dz + 3);
	locateBlock(five, px + dx - 2, py + 3, pz + dz);
	locateBlock(five, px + dx + 2, py + 3, pz + dz);
	locateBlock(five, px + dx - 2, py + 3, pz + dz + 1);
	locateBlock(five, px + dx + 2, py + 3, pz + dz + 1);
	locateBlock(five, px + dx + -1, py + 3, pz + dz + 2);
	locateBlock(five, px + dx + -2, py + 3, pz + dz + 2);
	locateBlock(five, px + dx + 0, py + 3, pz + dz + 2);
	locateBlock(five, px + dx + 1, py + 3, pz + dz + 2);
	locateBlock(five, px + dx + 2, py + 3, pz + dz + 2);
	locateBlock(five, px + dx + -1, py + 3, pz + dz + 3);
	locateBlock(five, px + dx + -2, py + 3, pz + dz + 3);
	locateBlock(five, px + dx + 0, py + 3, pz + dz + 3);
	locateBlock(five, px + dx + 1, py + 3, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 3, pz + dz + 3);
	locateBlock(five, px + dx + -2, py + 4, pz + dz + 2);
	locateBlock(five, px + dx + 0, py + 4, pz + dz + 2);
	locateBlock(five, px + dx + 2, py + 4, pz + dz + 2);
	locateBlock(five, px + dx + -1, py + 4, pz + dz + 3);
	locateBlock(five, px + dx + -2, py + 4, pz + dz + 3);
	locateBlock(five, px + dx + 0, py + 4, pz + dz + 3);
	locateBlock(five, px + dx + 1, py + 4, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 4, pz + dz + 3);
	locateBlock(five, px + dx + -1, py + 5, pz + dz + 2);
	locateBlock(five, px + dx + -2, py + 5, pz + dz + 2);
	locateBlock(five, px + dx + 0, py + 5, pz + dz + 2);
	locateBlock(five, px + dx + 1, py + 5, pz + dz + 2);
	locateBlock(five, px + dx + 2, py + 5, pz + dz + 2);
	locateBlock(five, px + dx + -1, py + 5, pz + dz + 3);
	locateBlock(five, px + dx + -2, py + 5, pz + dz + 3);
	locateBlock(five, px + dx + 0, py + 5, pz + dz + 3);
	locateBlock(five, px + dx + 1, py + 5, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 5, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 6, pz + dz + 3);
	locateBlock(five, px + dx + 2, py + 6, pz + dz + 2);
	locateBlock(five, px + dx - 2, py + 6, pz + dz + 3);
	locateBlock(five, px + dx - 2, py + 6, pz + dz + 2);
	return 0;
}